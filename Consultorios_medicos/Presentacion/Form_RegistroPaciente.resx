<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>